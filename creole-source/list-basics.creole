lists are fundamental to any Lisp because of their simplicity and
generality; they are the defining feature of the lisp programming
style and responsible for the name - //LISt Processing//

== what's in the movie? ==

//making lists// with the {{{list}}} form or with //list literals// -
quoted {{{'(lists)}}} and {{{`(backquoted lists)}}} 

how list literals are great for structure

{{{
`(("nic"     . (("job" "hacker")
                ("packages" ["elnode" "elpakit" "creole"])))
  ("magnars" . (("job" "movie star")
                ("packages" ["dash" "s.el" "mc"]))))
}}}

using

{{{
M-x package-install smartparens
}}}

[[http://github.com/Fuco1/smartparens|smartparens]], or the older
{{{paredit}}} package are great for moving around lists.

=== some functions ===

| {{{length}}} | how long is a list                                           |
| {{{elt}}}    | get the element at an index.                                 |
| {{{car}}}    | the head of the list.                                        |
| {{{cdr}}}    | the rest of the list.                                        |
| {{{cadr}}}   | composition of {{{car}}} and {{{cdr}}} and the arc anecdote. |

